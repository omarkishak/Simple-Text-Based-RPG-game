#include <iostream>
#include <sstream>
#include <string>
#include <random>

using namespace std;

bool chkUserInput(const string& userInput) {
    int number;
    char extra;
    istringstream iss(userInput);
    if (!(iss >> number) || (iss >> extra)) {
        return false;
    }
    return (number >= 1 && number <= 5);
}

int main() {
    int length = 5, horizontal = 23, coordinates = 1, gridAccess1 = 0, gridAccess2 = 0, userRawInt = 0, userColumnInt = 0;
    char grid[length][length] = {
        {' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' '},
        {' ', ' ', ' ', ' ', ' '},
    };

    string userColumnStr, userRowStr;

    int health = 100, shield = 50, coins = 0, inventorySize = 3, inventoryCentringSpace = 12; // <= HotBar Items

    while (true) {
        gridAccess1 = 0;
        gridAccess2 = 0;

        for (int i = 0; i < length; i++) {
            if (i == 0) {
                cout << " ";
                for (int j = 0; j < length; j++) {
                    if (j == 0) {
                        cout << " | ";
                    }
                    cout << coordinates++;
                    cout << " | ";
                }
                cout << '\n';

                for (int j = 0; j < horizontal; j++) {
                    cout << '-';
                }
                cout << '\n';

                coordinates = 1;
            }

            cout << coordinates++;

            for (int j = 0; j < length; j++) {
                if (j == 0) {
                    cout << " | ";
                }
                cout << grid[gridAccess2][gridAccess1];
                cout << " | ";

                if (gridAccess2 == 4) {
                    gridAccess2 = 0;
                    gridAccess1++; // <= لا ادري الفائدة منها اذا كانت هى ستزيد بعد الشرط برجاء التوضيح
                }
                gridAccess1++;
            }
            cout << '\n';

            for (int j = 0; j < horizontal; j++) {
                cout << '-';
            }
            cout << '\n';
        }

        coordinates = 1;
        cout << '\n';

        char inventory[inventorySize]= {' ', ' ', ' '};
        cout << "Health: " << health << "  |  " << "shield" << ": " << shield <<  "  |  " << "coins" << ": " << coins << '\n';
        cout << "Inventory: { " << inventory[0] << " | " << inventory[1] << " | " << inventory[2] << " }\n";
        cout << "* Enter then number of the desired column followed by the raw to move: " << endl;

        getline(cin, userColumnStr);
        getline(cin, userRowStr);

        if(chkUserInput(userColumnStr) && chkUserInput(userRowStr)) {
            userColumnInt = stoi(userColumnStr);
            userRawInt = stoi(userRowStr);

            //clear the list grid
            #ifdef _WIN32
                system("cls");
            #else
                system("clear");
            #endif

            if(grid[userRawInt-1][userColumnInt-1] == '#'){
                cout << "\n****This place is already taken****\n\n";
            }else{
                grid[userRawInt - 1][userColumnInt - 1] = '#';

                //randomize the [coins, items, enemies, ...etc]
                random_device rd;
                mt19937 gen(rd());
                uniform_int_distribution<int> range(1,100);

                if(range(gen) < 25 /*نسبة ظهور العملات 25 في المئة, هذا مجرد رقم في الأول*/){
                    int bouns = (range(gen) % 11);
                    coins+= bouns;
                    if(bouns > 1){
                        cout << "\n****You Got " << bouns << " Coins!****\n\n";
                    }else if(bouns == 1){
                        cout << "\n****You Got A Coin!****\n\n";
                    }
                }
            }
        }else{
            #ifdef _WIN32
                system("cls");
            #else
                system("clear");
            #endif
        }
    }

    return 0;
}
