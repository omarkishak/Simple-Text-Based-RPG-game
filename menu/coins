#include <iostream>
#include <sstream>
#include <string>
#include <random>

using namespace std;

bool chkUserInput(const string& userInput) {
    int number;
    char extra;
    istringstream iss(userInput);
    if (!(iss >> number) || (iss >> extra)) {
        return false;
    }
    return (number >= 1 && number <= 2 /*<= this number must be equal to the number of the length*/); 
}

// Check if player won or not;
bool isDone(vector<vector<char>>&grid){
    int counter=0;

    for(int i=0;i<size(grid);i++){
        for(int j=0;j<size(grid);j++){
            if(grid[i][j] == '#'){
                counter +=1;
            }
        }
    }

    return counter == size(grid) * size(grid);
}

void displayInv(int &health,int &shield,int &coins,int &inventorySize){
    char inventory[inventorySize]= {' ', ' ', ' '};
    cout << "Health: " << health << "  |  " << "shield" << ": " << shield <<  "  |  " << "coins" << ": " << coins << '\n';
    cout << "Inventory: { " << inventory[0] << " | " << inventory[1] << " | " << inventory[2] << " }\n";
}

int main() {
    int length = 2, horizontal = (length * 4) + 3, coordinates = 1, userRawInt = 0, userColumnInt = 0;

    // to make the grid more flexiable and be able to resize in any other level.
    vector<vector<char>> grid(length,vector<char>(length,' ')); 

    string userColumnStr, userRowStr;

    int health = 100, shield = 50, coins = 0, inventorySize = 3, inventoryCentringSpace = 12; // <= HotBar Items

    //randomize the [coins, items, enemies, ...etc]
    random_device rd;
    mt19937 gen(rd());
    uniform_int_distribution<int> range(1,100);
    while (true) {
        int bouns = (range(gen) % 11);

        for (int i = 0; i < length; i++) {
            if (i == 0) {
                cout << " ";
                for (int j = 0; j < length; j++) {
                    if (j == 0) {
                        cout << " | ";
                    }
                    cout << coordinates++;
                    cout << " | ";
                }
                cout << '\n';

                for (int j = 0; j < horizontal; j++) {
                    cout << '-';
                }
                cout << '\n';

                coordinates = 1;
            }

            cout << coordinates++;

            for (int j = 0; j < length; j++) {
                if (j == 0) {
                    cout << " | ";
                }
                cout << grid[i][j];
                cout << " | ";

            }
            cout << '\n';

            for (int j = 0; j < horizontal; j++) {
                cout << '-';
            }
            cout << '\n';
        }

        coordinates = 1;
        cout << '\n';

        displayInv(health,shield,coins,inventorySize);
        cout << "* Enter then number of the desired column followed by the row to move: " << endl;

        getline(cin, userColumnStr);
        getline(cin, userRowStr);
        
        if(chkUserInput(userColumnStr) && chkUserInput(userRowStr)) {
            userColumnInt = stoi(userColumnStr);
            userRawInt = stoi(userRowStr);
            
            //clear the last grid
            cout << "\033[2J\033[1;1H";

            if(grid[userRawInt-1][userColumnInt-1] == '#'){
                cout << "\n****This place is already taken****\n\n";
            }else{
                grid[userRawInt - 1][userColumnInt - 1] = '#';

                if(range(gen) <= 25 /*نسبة ظهور العملات 25 في المئة, هذا مجرد رقم في الأول*/){
                    coins+= bouns;
                    if(bouns > 1){
                        cout << "\n****You Got " << bouns << " Coins!****\n\n";
                    }else if(bouns == 1){
                        cout << "\n****You Got A Coin!****\n\n";
                    }
                }

            }
        }else{
            cout << "\033[2J\033[1;1H";
        }

        if(isDone(grid)){
            cout << "\033[2J\033[1;1H";

            if(bouns > 1){
                cout << "\n****You Got " << bouns << " Coins!****\n\n";
            }else if(bouns == 1){
                cout << "\n****You Got A Coin!****\n\n";
            }

            cout << "Great job, \033[32mYOU WON!\033[0m" << endl;
            cout << "======\n";
            cout << "Stats: " << endl;
            displayInv(health,shield,coins,inventorySize);
            cout << "======\n";

            #ifdef _WIN32
                system("menu.exe");
            #else
                system("./menu");
            #endif

            break;
        }
    }

    return 0;
}
